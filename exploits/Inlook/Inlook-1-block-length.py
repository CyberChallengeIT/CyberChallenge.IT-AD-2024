#!/usr/bin/env python3

import sys
import string
import random
import json
from client import Client
from math import gcd
from Crypto.Util.number import *
from cipher import *


PORT = 1337
alphabet = string.ascii_letters + string.digits


def get_random_str(len):
    return ''.join(random.choice(alphabet) for i in range(len))

def exploit(ip, flag_id):
    client = Client(ip, PORT)
    client.connect()
    client.register(get_random_str(20), get_random_str(20), get_random_str(20), get_random_str(20))
    my_p, my_q = client.sk
    target_result = client.get_encrypted_email(flag_id["address"], flag_id["email_id"])
    target_n = target_result["pk_sig"][0]
    enc_flag = bytes.fromhex(target_result["content"])

    client.remote.sendline(json.dumps({"action": "send_email", "recipient": flag_id["address"], "content": 'ff'*32 + '61'*64, "subject": get_random_str(20)}).encode())
    result = json.loads(client.remote.recvline(False).decode())
    assert result["result"] == "success" and "answer" in result

    ans = decrypt(bytes.fromhex(result["answer"]), client.sk)
    ans_blocks = [int.from_bytes(ans[i:i+32], 'big') for i in range(0, len(ans), 32)]

    for k in range(2):
        ans3 = ans_blocks[2] + k*my_p
        if ans3 > 2**256:
            continue
        bblocks = [b.to_bytes(32, 'big') for b in (ans_blocks[:2] + [ans3])]
        coso = b''.join(bblocks)[len('I received your email with content '):]
        coso = (2**256 -1) - int.from_bytes(coso[:32], 'big')
        if gcd(coso, target_n) != 1:
            break
    else:
        return 'nope'
    
    target_p = gcd(coso, target_n)
    assert isPrime(target_p) and target_n%target_p == 0 and target_n%(target_p**2) == 0
    target_q = target_n//(target_p**2)

    return decrypt(enc_flag, (target_p, target_q))

if __name__ == "__main__":
    ip = sys.argv[1]
    flag_id = json.loads(sys.argv[2])
    print(exploit(ip, flag_id))